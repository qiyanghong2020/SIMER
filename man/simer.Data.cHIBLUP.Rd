% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simer.Data.R
\name{simer.Data.cHIBLUP}
\alias{simer.Data.cHIBLUP}
\title{simer.Data.cHIBLUP: The function of calling HIBLUP software of C version
Author: Dong Yin
Build date: June 28, 2021
Last update: Aug 25, 2021}
\usage{
simer.Data.cHIBLUP(
  planPhe,
  fileMVP = NULL,
  filePed = NULL,
  mode = "A",
  vc.method = "AI",
  verbose = TRUE
)
}
\arguments{
\item{planPhe}{breeding plans about phenotype}

\item{fileMVP}{Genotype in MVP format}

\item{filePed}{the pedigree files, it can be a vector}

\item{mode}{'A' or 'AD', Additive effect model or Additive and Dominance mode}

\item{vc.method}{default is 'AI', the method of calucating variance components in HIBLUP}

\item{verbose}{whether to print detail.}
}
\value{
a list of gebv
}
\description{
simer.Data.cHIBLUP: The function of calling HIBLUP software of C version
Author: Dong Yin
Build date: June 28, 2021
Last update: Aug 25, 2021
}
\examples{
jsonFile <- system.file("extdata", "demo2.json", package = "simer")
jsonList <- rjson::fromJSON(file = jsonFile)

# prepare genotype data
genoPath <- jsonList$genotype
genoFiles <- list.files(genoPath)
fileMVP <- grep(pattern = "geno.desc", genoFiles, value = TRUE)
fileMVP <- file.path(genoPath, fileMVP)
fileMVP <- substr(fileMVP, 1, nchar(fileMVP)-10)

# prepare pedigree data
filePed <- jsonList$pedigree

# prepare phenotype data
planPhe <- jsonList$analysis_plan

# call HIBLUP
# gebvs <- simer.Data.cHIBLUP(planPhe = planPhe, fileMVP, filePed)
}
